{
  "name": "vs-sapf",
  "displayName": "SAPF Language",
  "description": "Sound As Pure Form (SAPF) language support",
  "version": "1.2.0",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "keywords": [
    "SAPF",
    "Sound As Pure Form",
    "algorave",
    "audio"
  ],
  "publisher": "victorkashirin",
  "homepage": "https://github.com/victorkashirin/vs-sapf",
  "repository": {
    "type": "git",
    "url": "https://github.com/victorkashirin/vs-sapf"
  },
  "icon": "images/sapf.png",
  "activationEvents": [
    "workspaceContains:**/{*.sapf}"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sapf.evalLine",
        "title": "SAPF: Evaluate current line or selection"
      },
      {
        "command": "sapf.evalBlock",
        "title": "SAPF: Evaluate block surrounded by parenthesis or selection"
      },
      {
        "command": "sapf.evalParagraph",
        "title": "SAPF: Evaluate paragraph (text between empty lines)"
      },
      {
        "command": "sapf.stop",
        "title": "SAPF: Stop any audio playing"
      },
      {
        "command": "sapf.clear",
        "title": "Clear everything off the stack"
      },
      {
        "command": "sapf.cleard",
        "title": "Clear all but the top item from the stack"
      },
      {
        "command": "sapf.quit",
        "title": "SAPF: quit"
      },
      {
        "command": "sapf.regenerateFunctionDefinitions",
        "title": "SAPF: Regenerate Local Function Definitions"
      },
      {
        "command": "sapf.removeFunctionDefinitions",
        "title": "SAPF: Remove Local Function Definitions"
      },
      {
        "command": "sapf.format",
        "title": "SAPF: Format Code"
      }
    ],
    "keybindings": [
      {
        "command": "sapf.evalLine",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && editorLangId == 'sapf'"
      },
      {
        "command": "sapf.evalBlock",
        "key": "shift+enter",
        "when": "editorTextFocus && editorLangId == 'sapf'"
      },
      {
        "command": "sapf.evalParagraph",
        "key": "ctrl+shift+enter",
        "mac": "cmd+shift+enter",
        "when": "editorTextFocus && editorLangId == 'sapf'"
      },
      {
        "command": "sapf.stop",
        "key": "ctrl+.",
        "mac": "cmd+.",
        "when": "editorTextFocus && editorLangId == 'sapf'"
      },
      {
        "command": "sapf.clear",
        "key": "ctrl+shift+.",
        "mac": "cmd+shift+.",
        "when": "editorTextFocus && editorLangId == 'sapf'"
      },
      {
        "command": "sapf.format",
        "key": "ctrl+shift+i",
        "mac": "cmd+shift+i",
        "when": "editorTextFocus && editorLangId == 'sapf'"
      }
    ],
    "languages": [
      {
        "id": "sapf",
        "aliases": [
          "SAPF"
        ],
        "extensions": [
          ".sapf"
        ],
        "configuration": "./sapf-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "sapf",
        "scopeName": "source.sapf",
        "path": "./syntaxes/sapf.tmLanguage.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "SAPF Evaluator Configuration",
      "properties": {
        "sapf.binaryPath": {
          "type": "string",
          "default": "sapf",
          "description": "Path to the sapf evaluator binary"
        },
        "sapf.preludePath": {
          "type": "string",
          "default": "",
          "description": "Custom path to prelude file"
        },
        "sapf.autostart": {
          "type": "boolean",
          "description": "Start sapf automatically when opening sapf file?",
          "default": true
        },
        "sapf.codeBlockBrackets": {
          "type": "string",
          "enum": [
            "round",
            "square",
            "curly"
          ],
          "enumItemLabels": [
            "(…)",
            "[…]",
            "{…}"
          ],
          "enumDescriptions": [
            "Round brackets ( … )",
            "Square brackets [ … ]",
            "Curly brackets { … }"
          ],
          "default": "round",
          "description": "Bracket style to mark code block"
        },
        "sapf.completionInfo": {
          "type": "string",
          "enum": [
            "off",
            "minimum",
            "full"
          ],
          "enumItemLabels": [
            "Off",
            "Minimum",
            "Full"
          ],
          "enumDescriptions": [
            "Don't show any completion info",
            "Show only function signature",
            "Show full documentation"
          ],
          "default": "full",
          "description": "How much information to show for SAPF code completion info."
        },
        "sapf.hoverInfo": {
          "type": "string",
          "enum": [
            "off",
            "minimum",
            "full"
          ],
          "enumItemLabels": [
            "Off",
            "Minimum",
            "Full"
          ],
          "enumDescriptions": [
            "Don't show any hover info",
            "Show only function signature",
            "Show full documentation"
          ],
          "default": "full",
          "description": "How much information to show for hovering sapf code info."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\"",
    "typecheck": "tsc --noEmit",
    "test": "vscode-test",
    "package": "npx vsce package",
    "build-language": "npm run compile && node scripts/generate-language.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@typescript-eslint/parser": "^8.35.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "dotenv": "^17.0.1",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.5.1",
    "prettier": "^3.6.2",
    "typescript": "^5.8.3"
  }
}
